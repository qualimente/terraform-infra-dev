version: 2
jobs:
  build:
    docker:
      - image: cimg/base:2023.12
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: set BUILD_ID
          command: |
            BUILD_TIMESTAMP_UTC=$(date -u +'%Y%m%d-%H%M')
            BUILD_COMMIT_SHORT=$(git rev-parse --short HEAD)
            echo "export BUILD_COMMIT_SHORT=${BUILD_COMMIT_SHORT}" >> $BASH_ENV
            echo "export BUILD_TIMESTAMP_UTC=${BUILD_TIMESTAMP_UTC}" >> $BASH_ENV
            echo "export BUILD_ID=${BUILD_TIMESTAMP_UTC}-${BUILD_COMMIT_SHORT}" >> $BASH_ENV
      - run:
          name: Build Docker image
          command: |
            source $BASH_ENV
            docker image build --cache-from=qualimente/terraform-infra-dev:latest -t qualimente/terraform-infra-dev:latest -t qualimente/terraform-infra-dev:${BUILD_ID} .
      - run:
          name: Test Docker image
          command: |
            source $BASH_ENV
            #  Cannot bind-mount files in CircleCI, so the obvious solution does not work:
            # -v ${CIRCLE_WORKING_DIRECTORY}/structure-tests.yaml:/structure-tests.yaml
            # https://circleci.com/docs/2.0/building-docker-images/#mounting-folders
            # Fine, use the data-packed container pattern:
            # create a container, copy the test file into it, mount that as a volume.
            docker container create -v /tests --name test-assets alpine:3.8 /bin/true
            docker container cp structure-tests.yaml test-assets:/tests/structure-tests.yaml
            docker container run --rm -it \
              -v /var/run/docker.sock:/var/run/docker.sock:ro \
              --volumes-from test-assets \
              gcr.io/gcp-runtimes/container-structure-test:v1.16.0 test \
              --image qualimente/terraform-infra-dev:${BUILD_ID} \
              --config /tests/structure-tests.yaml
      - deploy:
          name: Publish Docker image to Docker Hub
          command: |
            source $BASH_ENV
            beginswith() { case $2 in "$1"*) true;; *) false;; esac; }
            if beginswith v "$CIRCLE_TAG" || [ ${CIRCLE_BRANCH} == "master" ]; then
              echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USER}" --password-stdin
              for tag in latest "${BUILD_ID}"
              do
                docker image push qualimente/terraform-infra-dev:${tag}
              done;
            else
              echo "Skipping deploy"
            fi
